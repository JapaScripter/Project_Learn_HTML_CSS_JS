<!--=====Projeto - Uma div especifica troca por várias palavras a cada periodo de tempo=====-->

<!DOCTYPE html>
<html lang="pt-br">
<!--==========-->
	<head>
	  <!--=====Meta Config.=====-->
		<meta charset="utf-8" name="viewport" content="width=device-width initial-scale= 1.0">
		<meta name="description" content="Projeto">
  	<meta name="keywords" content="HTML,CSS,XML,JavaScript">
  	<meta name="author" content="YuriY">
		<!--=====End Meta Config.=====-->
	  <!--=====Title Tab=====-->
		<title>Teste</title>
		<!--=====End Title Tab=====-->
		<!--=====CSS Import=====-->
		<!--=====End CSS Import=====-->
		<!--=====CSS Inside=====-->
		<style>
		@import url(http://fonts.googleapis.com/css?family=Roboto:100,600);
		body {
			background: #000000;
		}
		.hero-titulo-words {
			/*display*/
			font-family: "trebuchet ms";
			font-size: 25px;
			text-align: left;
			text-transform: uppercase;
			color: #FFFFFF;
		}
		.hero-words {
			/*font*/
			text-align: left;
			/*display*/
			display: flex-inline;
			position: relative;
			width: 500px;
			height: 100px;
			overflow: hidden;
			animation: changewords 7s infinite;
		}
		.hero-word {
			/*font*/
			font-family: "trebuchet ms";
			font-size: 60px;
			font-weight: 700;
			text-align: left;
			text-transform: uppercase;
			color: #FFFFFF;
			/*display*/
			position: absolute;
			width: 450px;
			height: 200px;
			top: -32.5px;
			left: 20px;
			overflow: hidden;
			animation: changewordfirst 7s infinite;
		}
		.hero-word:nth-of-type(2) {
			/*font*/
			color: #FFFFFF;
			/*display*/
			animation: changewordsecond 7s infinite;
		}
		.hero-word:nth-of-type(3) {
			/*font*/
			color: #FFFFFF;
			/*display*/
			animation: changewordthird 7s infinite;
		}
		@keyframes changewordfirst {
			0% {
			 width: 450px;
			}
			16.5% {
			 width: 450px;
			}
			25% {
			 width: 0;
			}
			93.75% {
			 width: 0;
			}
			100% {
			 width: 450px;
		}
		}
		@keyframes changewordsecond {
			0% {
			 width: 0;
			}
			25% {
			 width: 0;
			}
			33% {
			 width: 450px;
			}
			50% {
			 width: 450px;
			}
			58.25% {
			 width: 0;
			}
			100% {
				 width: 0;
			}
		}
		@keyframes changewordthird {
			0% {
			 width: 0;
			}
			58.25% {
			 width: 0;
			}
			66% {
			 width: 450px;
			}
			85% {
			 width: 450px;
			}
			93.75% {
			 width: 0;
			}
			100% {
			 width: 0;
			}
		}
		@keyframes changewords {
			0% {
			 width: 450px;
			}
			16.5% {
			 width: 450px;
			}
			25% {
			 width: 0;
			}
			33% {
			 width: 450px;
			}
			50% {
			 width: 450px;
			}
			58.25% {
			 width: 0;
			}
			66% {
			 width: 450px;
			}
			85% {
			 width: 450px;
			}
			93.75% {
			 width: 0;
			}
			100% {
			 width: 450px;
			}
		}
		</style>
		<!--=====End CSS Inside=====-->
	</head>
<!--==========-->
	<body>
		<!--=====Main=====-->		
		<main>	
			<!--=====Code=====-->
			<h1 class="hero-titulo-words"><strong style="font-size: 60px">diferença</strong> em:
				<span class="hero-words">
					<span class="hero-word">EXCELÊNCIA</span>
					<span class="hero-word">EXPERIÊNCIA</span>
					<span class="hero-word">INOVAÇÃO</span>
				</span>
			</h1>
			<!--=====End Code=====-->
		</main>
		<!--=====End Main=====-->		
		<!--=====Script Import=======-->
		<script src="script.js"></script>
		<!--=====End Script Import=====-->
		<!--=====Script Inside=====-->
		<script>
		let progress = 50
		let startX = 0
		let active = 0
		let isDown = false
		const speedWheel = 0.02
		const speedDrag = -0.1
		const getZindex = (array, index) => (array.map((_, i) => (index === i) ? array.length : array.length - Math.abs(index - i)))
		const $items = document.querySelectorAll('.depoimentos-container')
		const $cursors = document.querySelectorAll('.cursor')
		const displayItems = (item, index, active) => {
			const zIndex = getZindex([...$items], active)[index]
			item.style.setProperty('--zIndex', zIndex)
			item.style.setProperty('--active', (index-active)/$items.length)
		}
		
		const animate = () => {
			progress = Math.max(0, Math.min(progress, 100))
			active = Math.floor(progress/100*($items.length-1))
			
			$items.forEach((item, index) => displayItems(item, index, active))
		}
		animate()
		
		$items.forEach((item, i) => {
			item.addEventListener('click', () => {
				progress = (i/$items.length) * 100 + 5
				animate()
			})
		})
		
		const handleWheel = e => {
			const wheelProgress = e.deltaY * speedWheel
			progress = progress + wheelProgress
			animate()
		}
		
		const handleMouseMove = (e) => {
			if (e.type === 'mousemove') {
				$cursors.forEach(($cursor) => {
					$cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`
				})
			}
			if (!isDown) return
			const x = e.clientX || (e.touches && e.touches[0].clientX) || 0
			const mouseProgress = (x - startX) * speedDrag
			progress = progress + mouseProgress
			startX = x
			animate()
		}
		
		const handleMouseDown = e => {
			isDown = true
			startX = e.clientX || (e.touches && e.touches[0].clientX) || 0
		}
		const handleMouseUp = () => {
			isDown = false
		}
		
		document.addEventListener('mousewheel', handleWheel)
		document.addEventListener('mousedown', handleMouseDown)
		document.addEventListener('mousemove', handleMouseMove)
		document.addEventListener('mouseup', handleMouseUp)
		document.addEventListener('touchstart', handleMouseDown)
		document.addEventListener('touchmove', handleMouseMove)
		document.addEventListener('touchend', handleMouseUp)
		</script>
		<!--=====End Script Inside=====-->
	</body>
<!--==========-->
</html>