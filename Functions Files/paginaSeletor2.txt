<!--=====Este projeto é um seletor de páginas=====-->

<!DOCTYPE html>
<html lang="pt-br">
<!--==========-->
	<head>
	  <!--=====Meta Config.=====-->
		<meta charset="utf-8" name="viewport" content="width=device-width initial-scale= 1.0">
		<meta name="description" content="Projeto">
  	<meta name="keywords" content="HTML,CSS,XML,JavaScript">
  	<meta name="author" content="YuriY">
		<!--=====End Meta Config.=====-->
	  <!--=====Title Tab=====-->
		<title>Teste</title>
		<!--=====End Title Tab=====-->
		<!--=====CSS Import=====-->
		<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-beta.2/css/bootstrap.css'>
		<!--=====End CSS Import=====-->
		<!--=====CSS Inside=====-->
		<style>
		body {
			text-align: center;
		}
		.pagination-wrapper {
			overflow-x:auto;
		}
		.pagination {
			justify-content: center;
			margin:30px;
		}
		.data-slice {
			margin-top: 15px;
		}
		</style>
		<!--=====End CSS Inside=====-->
	</head>
<!--==========-->
	<body>
		<!--=====Main=====-->		
		<main>	
			<!--=====Code=====-->
			<div id="app"></div>
			<!--=====End Code=====-->
		</main>
		<!--=====End Main=====-->		
		<!--=====Script Import=======-->
		<script src="script.js"></script>
		<script src='https://cdnjs.cloudflare.com/ajax/libs/react/16.4.0/umd/react.development.js'></script>
		<script src='https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.4.0/umd/react-dom.development.js'></script>
		<script src='https://cdnjs.cloudflare.com/ajax/libs/reactstrap/4.8.0/reactstrap.min.js'></script>
		<!--=====End Script Import=====-->
		<!--=====Script Inside=====-->
		<script>
			const { Pagination, PaginationItem, PaginationLink } = Reactstrap;
	class App extends React.PureComponent {
		constructor() {
			super();
			// create data set of random length
			this.dataSet = [...Array(Math.ceil(500 + Math.random() * 500))].map(
			(a, i) => "Record " + (i + 1));
			this.pageSize = 50;
			this.pagesCount = Math.ceil(this.dataSet.length / this.pageSize);
			this.state = { currentPage: 0 };
		}
		handleClick(e, index) {
			e.preventDefault();
			this.setState({	currentPage: index });
		}
		render() {
			const { currentPage } = this.state;
			return /*#__PURE__*/(
				React.createElement(React.Fragment, null, /*#__PURE__*/
					React.createElement("div", { className: "pagination-wrapper" }, /*#__PURE__*/
						React.createElement(Pagination, { "aria-label": "Page navigation example" }, /*#__PURE__*/
							React.createElement(PaginationItem, { disabled: currentPage <= 0 }, /*#__PURE__*/
								React.createElement(PaginationLink, {
									onClick: e => this.handleClick(e, currentPage - 1),
									previous: true,
									href: "#" 
								})
							),
							[...Array(this.pagesCount)].map((page, i) => /*#__PURE__*/
								React.createElement(PaginationItem, { active: i === currentPage, key: i }, /*#__PURE__*/
									React.createElement(PaginationLink, { onClick: e => this.handleClick(e, i), href: "#" },
										i + 1
									)
								)
							), /*#__PURE__*/
							React.createElement(PaginationItem, { disabled: currentPage >= this.pagesCount - 1 }, /*#__PURE__*/
								React.createElement(PaginationLink, {
									onClick: e => this.handleClick(e, currentPage + 1),
									next: true,
									href: "#" 
								})
							)
						)
					),
					this.dataSet.
					slice(
						currentPage * this.pageSize,
						(currentPage + 1) * this.pageSize
					)
					.map((data, i) => /*#__PURE__*/
						React.createElement("div", { className: "data-slice", key: i },
						data)
					)
				)
			);
		}	
	}
	ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById("app"));
		</script>
		<!--=====End Script Inside=====-->
	</body>
<!--==========-->
</html>